-- Solution-1: Using IN (inefficient because subquery runs every time for each row in result set)

SELECT HACKERS.HACKER_ID, NAME, COUNT(CHALLENGE_ID) FROM HACKERS, CHALLENGES
WHERE HACKERS.HACKER_ID = CHALLENGES.HACKER_ID
GROUP BY HACKER_ID, NAME
HAVING COUNT(CHALLENGE_ID) IN (
(SELECT MAX(NUM_CHALLENGES) FROM 
(SELECT COUNT(CHALLENGE_ID) AS NUM_CHALLENGES FROM CHALLENGES 
GROUP BY HACKER_ID) AS GROUPED_CHALLENGES) -- Note that max is queried in such a way since LIMIT does not work in all sql versions (Sort in descending order and return first row gives error)
UNION
(SELECT NUM_CHALLENGES FROM (SELECT HACKER_ID, COUNT(CHALLENGE_ID) AS NUM_CHALLENGES FROM CHALLENGES 
GROUP BY HACKER_ID) AS GROUPED_CHALLENGES
GROUP BY NUM_CHALLENGES -- 2 GROUP BY 
HAVING COUNT(NUM_CHALLENGES)=1))
ORDER BY COUNT(CHALLENGE_ID) DESC,
HACKER_ID ASC;


-----X-----X-----X-----X-----X-----X-----X-----X-----X-----X----X----X-----X-----X-----


-- Solution-2: Use JOIN, subquery runs once while performing JOIN, efficient

SELECT HACKER_ID, NAME, RESULT_SET.NUM_CHALLENGES FROM 
(SELECT HACKERS.HACKER_ID AS HACKER_ID, NAME, COUNT(CHALLENGE_ID) AS NUM_CHALLENGES FROM HACKERS, CHALLENGES
WHERE HACKERS.HACKER_ID = CHALLENGES.HACKER_ID
GROUP BY HACKER_ID, NAME) AS RESULT_SET
JOIN 
((SELECT MAX(NUM_CHALLENGES) AS NUM_CHALLENGES FROM 
(SELECT COUNT(CHALLENGE_ID) AS NUM_CHALLENGES FROM CHALLENGES 
GROUP BY HACKER_ID) AS GROUPED_CHALLENGES)
UNION
(SELECT NUM_CHALLENGES FROM (SELECT HACKER_ID, COUNT(CHALLENGE_ID) AS NUM_CHALLENGES FROM CHALLENGES 
GROUP BY HACKER_ID) AS GROUPED_CHALLENGES
GROUP BY NUM_CHALLENGES
HAVING COUNT(NUM_CHALLENGES)=1)) AS COUNT_CHALLENGES
ON RESULT_SET.NUM_CHALLENGES = COUNT_CHALLENGES.NUM_CHALLENGES
ORDER BY RESULT_SET.NUM_CHALLENGES DESC,
HACKER_ID ASC;


-----X-----X-----X-----X-----X-----X-----X-----X-----X-----X----X----X-----X-----X-----


-- Solution-3: Make Solution-2 readable using CTE

WITH RESULT_SET AS
(SELECT HACKERS.HACKER_ID AS HACKER_ID, NAME, COUNT(CHALLENGE_ID) AS NUM_CHALLENGES FROM HACKERS, CHALLENGES
WHERE HACKERS.HACKER_ID = CHALLENGES.HACKER_ID
GROUP BY HACKER_ID, NAME)
,
COUNT_CHALLENGES AS
((SELECT MAX(NUM_CHALLENGES) AS NUM_CHALLENGES FROM 
(SELECT COUNT(CHALLENGE_ID) AS NUM_CHALLENGES FROM CHALLENGES 
GROUP BY HACKER_ID) AS GROUPED_CHALLENGES)
UNION
(SELECT NUM_CHALLENGES FROM (SELECT HACKER_ID, COUNT(CHALLENGE_ID) AS NUM_CHALLENGES FROM CHALLENGES 
GROUP BY HACKER_ID) AS GROUPED_CHALLENGES
GROUP BY NUM_CHALLENGES
HAVING COUNT(NUM_CHALLENGES)=1))
 
SELECT HACKER_ID, NAME, RESULT_SET.NUM_CHALLENGES 
FROM RESULT_SET JOIN COUNT_CHALLENGES 
ON RESULT_SET.NUM_CHALLENGES = COUNT_CHALLENGES.NUM_CHALLENGES
ORDER BY RESULT_SET.NUM_CHALLENGES DESC,
HACKER_ID ASC;