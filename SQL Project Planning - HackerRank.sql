/*
Enter your query here.
*/

-- Solution-1: NOT IN + JOIN 

SELECT START_DATE, MIN(END_DATE) FROM
(SELECT START_DATE FROM PROJECTS WHERE START_DATE NOT IN (SELECT END_DATE FROM PROJECTS)) AS START_DATES, 
(SELECT END_DATE FROM PROJECTS WHERE END_DATE NOT IN (SELECT START_DATE FROM PROJECTS)) AS END_DATES
WHERE START_DATE < END_DATE
GROUP BY START_DATE
ORDER BY DATEDIFF(MIN(END_DATE), START_DATE),
START_DATE;


-- Solution-2: Run subquery once using 2 joins
-- Note that since we are using left join here we need to filter using where (and does not filter in case of left join) 
-- Go to the definition of the left join. It takes all rows from the first table, regardless of whether the on clause evaluates to true, false, or NULL. So, filters on the first table have no impact in a left join.
-- Filters on the first table should be in the where clause. Filters on the second table should be in the on clause.

SELECT START_DATE, MIN(END_DATE) FROM
(SELECT PROJECTS1.START_DATE FROM PROJECTS AS PROJECTS1 LEFT JOIN PROJECTS AS PROJECTS2 ON PROJECTS1.START_DATE = PROJECTS2.END_DATE WHERE PROJECTS2.END_DATE IS NULL) AS START_DATES, 
(SELECT PROJECTS1.END_DATE FROM PROJECTS AS PROJECTS1 LEFT JOIN PROJECTS AS PROJECTS2 ON PROJECTS1.END_DATE = PROJECTS2.START_DATE WHERE PROJECTS2.START_DATE IS NULL) AS END_DATES
WHERE START_DATE < END_DATE
GROUP BY START_DATE
ORDER BY DATEDIFF(MIN(END_DATE), START_DATE),
START_DATE;


-- Solution-3: Make Solution-2 readable using CTE

WITH START_DATES AS 
(SELECT PROJECTS1.START_DATE FROM PROJECTS AS PROJECTS1 LEFT JOIN PROJECTS AS PROJECTS2 ON PROJECTS1.START_DATE = PROJECTS2.END_DATE WHERE PROJECTS2.END_DATE IS NULL),

END_DATES AS
(SELECT PROJECTS1.END_DATE FROM PROJECTS AS PROJECTS1 LEFT JOIN PROJECTS AS PROJECTS2 ON PROJECTS1.END_DATE = PROJECTS2.START_DATE WHERE PROJECTS2.START_DATE IS NULL)

SELECT START_DATE, MIN(END_DATE) FROM
START_DATES, END_DATES
WHERE START_DATE < END_DATE
GROUP BY START_DATE
ORDER BY DATEDIFF(MIN(END_DATE), START_DATE),
START_DATE;